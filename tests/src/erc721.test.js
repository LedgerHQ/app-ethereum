import "core-js/stable";
import "regenerator-runtime/runtime";
import { waitForAppScreen, zemu, txFromEtherscan } from './test.fixture';
import { TransportStatusError } from "@ledgerhq/errors";

test('[Nano S] Transfer erc721', zemu("nanos", async (sim, eth) => {

  // https://etherscan.io/tx/0x73cec4fc07de3a24ba42e8756e13b7ddfa9bd449126c37640881195e8ea9e679
  const rawTx = "0x02f8d101058459682f0085233da9943e8301865b94bd3531da5cf5857e7cfaa92426877b022e612cf880b86423b872dd0000000000000000000000004cc568b73c0dcf8e90db26d7fd3a6cfadca108a3000000000000000000000000d4c9b20950c3eca38fc1f33f54bdf9694e4887990000000000000000000000000000000000000000000000000000000000000f21c080a094c8632fe7277aa8c54cea9d81a15911cfa4970a2bf7356d14d04cc5afbcdab7a013a77b8c79e5d9b2b35edb3c44db3bb41b92f5c463ff126bf19d213b2b9ba8b5";
  const serializedTx = txFromEtherscan(rawTx);

  // with ETH need to test
  // const serializedTx = txFromEtherscan("0x02f901350182022f8459682f0085246ad7eb3182de2994424db67b40b15ed85475c3f29dedf601b6ee75b283424242b8c4f242432a000000000000000000000000dcdb88f3754b2841093d9348a2d02df8cf06314c000000000000000000000000df9fb2eff1f2871caeeb94bf262ffba84efddddc0000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000c001a0c4283f86dc852e43e9fd1077b448c63fec76bdeb44dfac977730725e41fa3676a0543b2d2f99f65fb20cd548964eee94b1c1865919f4574c7089d8b95678b667c2");

  const tx = eth.signTransaction(
    "44'/60'/1'/0/0",
    serializedTx,
  );

  await waitForAppScreen(sim);
  await sim.navigateAndCompareSnapshots('.', 'nanos_erc721_transfer_ethereum', [12, 0]);

  await expect(tx).resolves.toEqual({
    "r": "409a22a14d640dab324852bbba4a0da04aa30a6e38d681bdba523fa36590bf93",
    "s": "2c954616d7ec1026ddc1c075c365d94c285299ebaf1d1090807b4bdd5cecc451",
    "v": "01",
  });
}));


test.skip('[Nano S] Transfer erc1155', zemu("nanos", async (sim, eth) => {

  // https://etherscan.io/getRawTx?tx=0x4b84aee342d8397b9b63a6639c832ec1eabc028edff6d6fab473ff04b291e314
  const rawTx = "0x02f901320182022f8459682f0085246ad7eb3182de2994424db67b40b15ed85475c3f29dedf601b6ee75b280b8c4f242432a000000000000000000000000dcdb88f3754b2841093d9348a2d02df8cf06314c000000000000000000000000df9fb2eff1f2871caeeb94bf262ffba84efddddc0000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000c001a0c4283f86dc852e43e9fd1077b448c63fec76bdeb44dfac977730725e41fa3676a0543b2d2f99f65fb20cd548964eee94b1c1865919f4574c7089d8b95678b667c2";
  const serializedTx = txFromEtherscan(rawTx);

  // with ETH need to test
  // const serializedTx = txFromEtherscan("0x02f901350182022f8459682f0085246ad7eb3182de2994424db67b40b15ed85475c3f29dedf601b6ee75b283424242b8c4f242432a000000000000000000000000dcdb88f3754b2841093d9348a2d02df8cf06314c000000000000000000000000df9fb2eff1f2871caeeb94bf262ffba84efddddc0000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000c001a0c4283f86dc852e43e9fd1077b448c63fec76bdeb44dfac977730725e41fa3676a0543b2d2f99f65fb20cd548964eee94b1c1865919f4574c7089d8b95678b667c2");

  const tx = eth.signTransaction(
    "44'/60'/1'/0/0",
    serializedTx,
  );

  await waitForAppScreen(sim);
  await sim.navigateAndCompareSnapshots('.', 'nanos_erc721_transfer_ethereum', [8, 0]);

  await expect(tx).resolves.toEqual({
    "r": "363a70d6817dde251ab1d24ffb18f235fcc2b1acb12d42f56b0ee967902a1ef1",
    "s": "0a9bf6b4a00f27187bbb22536f70d7fea69b585adc033902939b08d10dbcdcfd",
    "v": "01",
  });
}));

test.skip('[Nano S] Transfer erc721 big tokenID', zemu("nanos", async (sim, eth) => {

  const rawtx = "0x02f901320182022f8459682f0085246ad7eb3182de2994424db67b40b15ed85475c3f29dedf601b6ee75b280b8c4f242432a000000000000000000000000dcdb88f3754b2841093d9348a2d02df8cf06314c000000000000000000000000df9fb2eff1f2871caeeb94bf262ffba84efddddcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000c001a0c4283f86dc852e43e9fd1077b448c63fec76bdeb44dfac977730725e41fa3676a0543b2d2f99f65fb20cd548964eee94b1c1865919f4574c7089d8b95678b667c2"
  const serializedTx = txFromEtherscan(rawtx);

  const tx = eth.signTransaction(
    "44'/60'/1'/0/0",
    serializedTx,
  );

  await waitForAppScreen(sim);
  await sim.navigateAndCompareSnapshots('.', 'nanos_erc721_transfer_ethereum', [8, 0]);

  await expect(tx).resolves.toEqual({
    "r": "363a70d6817dde251ab1d24ffb18f235fcc2b1acb12d42f56b0ee967902a1ef1",
    "s": "0a9bf6b4a00f27187bbb22536f70d7fea69b585adc033902939b08d10dbcdcfd",
    "v": "01",
  });
}));